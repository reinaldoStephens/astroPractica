---
import "../components/css/nav.scss";
import Nav from "./Nav";

const currentUrlPathname = Astro.url.pathname;
---

<header class="header-section">
    <Nav pathname={currentUrlPathname} client:load />
    <div aria-hidden="true" id="menu-backdrop"></div>
</header>

<style is:global>
    .header-section {
        width: 100%;
        position: sticky;
        background-color: #ffffff;
        top: 0;
        z-index: 10;
    }

    #menu-backdrop {
        position: absolute;
        background-image: linear-gradient(69deg, rgba(85, 236, 219, 0.5), rgba(212, 148, 255, 0.5));
        /* background-color: #e1e1e18b; */
        border-radius: 0.25rem;
        transition-property: opacity, left, top, width, height, visibility;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 500ms;
        z-index: -10;
    }

    .menu-backdrop-visible {
        display: block;
        opacity: 1;
        visibility: visible;
    }

    .menu-backdrop-hidden {
        display: none;
        opacity: 0;
        visibility: hidden;
    }

    .text-gradient {
        /*linear-gradient(45deg, rgba(85, 236, 219, 1), rgba(212, 148, 255, 1))*/
        background-image: linear-gradient(45deg, rgba(212, 148, 255, 1), rgba(85, 236, 219, 1), #3776ff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }

    @media screen and (max-width: 950px) {
        #menu-backdrop {
            z-index: 10;
        }

        /* menu */
        .header-section {
            margin-bottom: 0;
        }
    }
</style>

<script>
    ["DOMContentLoaded", "astro:after-swap"].forEach((event) => {
        document.addEventListener(event, addListeners);
    });

    function setMenuBackdrop(element: Element, menuBackDrop: HTMLElement) {
        const { width, height, top, left } = element.getBoundingClientRect();
        menuBackDrop.style.setProperty("left", `${left}px`);
        menuBackDrop.style.setProperty("top", `${top}px`);
        menuBackDrop.style.setProperty("width", `${width}px`);
        menuBackDrop.style.setProperty("height", `${height}px`);
        menuBackDrop.style.display = "block";
        menuBackDrop.style.opacity = "1";
        menuBackDrop.style.visibility = "visible";
    }

    function addListeners() {
        const headerSection = document.querySelector(".header-section");
        const listItem = headerSection?.querySelectorAll(".header-section li");
        const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement;
        const linkSelected = document.querySelector('[aria-selected="true"]');
        const menuButton = document.querySelector("#menu-button");

        listItem?.forEach((item) => {
            item.addEventListener("mouseenter", () => {
                setMenuBackdrop(item, menuBackDrop);
            });
        });

        headerSection?.addEventListener("mouseleave", () => {
            if (linkSelected) {
                setMenuBackdrop(linkSelected, menuBackDrop);
            }
        });

        menuButton?.addEventListener("click", (event) => {
            if (menuButton.classList.contains("open")) {
                menuBackDrop.style.display = "none";
                menuBackDrop.style.opacity = "0";
                menuBackDrop.style.visibility = "hidden";
            }
        });

        if (linkSelected) {
            setMenuBackdrop(linkSelected, menuBackDrop);
        }
    }
</script>
