---
import "../../components/css/addCartForm.scss";

import Layout from "../../layouts/Layout.astro";
import { slide } from "astro:transitions";
import { AddToCartForm } from "../../components/AddToCartForm.jsx";

import { getProductBy, getLatestProducts } from "../../services/fakeStore.js";
import { searchProducts } from "../../services/products.js";
import NotFoundLayout from "../../layouts/NotFoundLayout.astro";
import ProductBreadcrumb from "../../components/ProductBreadcrumb.astro";

export async function getStaticPaths() {
    const products = getLatestProducts();

    return products.map((product, index, arr) => ({
        params: {
            id: product.id,
        },
        props: {
            product: product,
            nextProduct: arr[index + 1],
            prevProduct: arr[index - 1],
        },
    }));
}

const { id } = Astro.params;

let { product, nextProduct, prevProduct } = Astro.props;
---

{
    !product ? (
        <NotFoundLayout title="Product not found" message="Product not found" />
    ) : (
        <Layout title={`Product ${product.title}`}>
            <section
                class="product-details-section"
                transition:name="product-page"
                transition:animate={slide({ duration: "0.4s" })}
            >
                <div class="breadcrumb">
                    <ProductBreadcrumb title={product.title} />
                </div>
                <nav class="products-nav">
                    <ul role="list">
                        <li>
                            <a href={prevProduct ? `/products/${prevProduct.id}` : "javaScript:void(0)"}>Prev</a>
                        </li>
                        <li>
                            <a href={nextProduct ? `/products/${nextProduct.id}` : "javaScript:void(0)"}>Next</a>
                        </li>
                    </ul>
                </nav>
                <figure class="zoom" style={`background-image: url(${product.image.src})`}>
                    <img width="570" height="570" src={product.image.src} alt={product.title} loading="lazy" decoding="async" />
                </figure>
                <header class="product-title">
                    <h2>{product.title}</h2>
                    <hr />
                </header>
                <article class="product-price-container">
                    <span class="dollar">US$</span>
                    <span class="price">{product.price}</span>
                </article>
                <article class="add-cart-form">
                    <AddToCartForm product={product} client:only="react" />
                </article>
                <article class="product-description">
                    <h5>Description</h5>
                    <p>{product.description}</p>
                </article>
            </section>
        </Layout>
    )
}

<script>
    document.addEventListener(
        "astro:page-load",
        () => {
            function zoom(e: any) {
                var zoomer = e.currentTarget;
                let offsetX, offsetY, x, y;
                e.offsetX ? (offsetX = e.offsetX) : (offsetX = e.touches[0]?.pageX);
                e.offsetY ? (offsetY = e.offsetY) : (offsetX = e.touches[0]?.pageX);
                x = (offsetX / zoomer.offsetWidth) * 100;
                y = (offsetY / zoomer.offsetHeight) * 100;
                zoomer.style.backgroundPosition = x + "% " + y + "%";
            }
            document.querySelector(".zoom")?.addEventListener("mousemove", (e) => {
                zoom(e);
            });
        },
        { once: false }
    );
</script>
<style>
    .product-details-section {
        max-width: 1280px;
        width: 100%;
        display: grid;
        grid-template:
            "breadcrumb products-nav"
            "image title"
            "image price"
            "image addToCartForm"
            "image description" 1fr /
            auto 1fr;
        margin: 0 auto;
    }

    .breadcrumb {
        grid-area: breadcrumb;
        margin-top: 0.5rem;
    }

    .products-nav ul {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: 1rem;
        font-size: 0.875rem;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .zoom {
        grid-area: image;
    }

    .product-price-container {
        grid-area: price;
    }

    .product-title {
        grid-area: title;
    }

    .add-cart-form {
        grid-area: addToCartForm;
    }

    .product-title h2 {
        font-size: 24px;
        margin-bottom: 4px;
    }

    .product-price-container .price {
        font-size: 28px;
        line-height: normal;
    }

    .product-price-container .dollar {
        font-size: 14px;
        position: relative;
        top: -0.7em;
        padding-right: 1px;
    }

    .product-description {
        padding-top: 0.5rem;
        grid-area: description;
    }

    .product-description h5 {
        font-size: 16px;
        line-height: 1;
        text-transform: uppercase;
    }

    .product-description p {
        line-height: 1.2rem;
        font-size: 16px;
    }

    hr {
        background-color: transparent;
        border-bottom-width: 0;
        border-left-width: 0;
        border-right-width: 0;
        border-top: 1px solid #bbbfbf;
        display: block;
        height: 1px;
        line-height: 19px;
        margin-bottom: 14px;
        margin-top: 0;
    }

    figure.zoom {
        background-position: 50% 50%;
        position: relative;
        overflow: hidden;
        cursor: crosshair;
    }

    figure.zoom img:hover {
        opacity: 0;
    }

    figure.zoom img {
        transition: opacity 0.5s;
        display: block;
    }

    @media screen and (max-width: 980px) {
        figure.zoom img {
            width: 100%;
            height: 100%;
        }

        figure.zoom {
            margin: 0 auto;
        }

        .products-nav {
            padding: 1rem;
        }

        .products-nav ul {
            justify-content: center;
        }

        .product-details-section {
            display: grid;
            grid-template:
                "breadcrumb"
                "products-nav"
                "image" 1fr
                "title"
                "price"
                "addToCartForm"
                "description" 1fr /
                auto;
        }
    }
</style>
