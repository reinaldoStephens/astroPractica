---
import "../../components/css/productGrid.scss";
import "../../components/css/productCard.scss";

import { Products } from "../../components/Products.jsx";
import Layout from "../../layouts/Layout.astro";
import { getProductBy, getLatestProducts } from "../../services/fakeStore.js";

export async function getStaticPaths({ paginate }) {
    const products = getLatestProducts();

    return paginate(products, {
        pageSize: 4,
    });
}

const { page } = Astro.props;
const { data, lastPage, currentPage, url } = page;

const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = pathname[1];

const prev = currentPage > 1 ? "" : "disabled";
const prevDisabled = prev === "disabled";
const next = currentPage < lastPage ? "" : "disabled";
const nextDisabled = next === "disabled";

const paginationList = Array.from({ length: lastPage }, (_, i) => i + 1);

//https://github.com/coding-in-public/astro-search-fusejs/blob/lesson-8/src/pages/search.astro
---

<Layout title="Products - Awa">
    <section class="products-section">
        <span class="heading_container heading_center">
            <h2>Products</h2>
        </span>

        <Products products={data} />
        {
            lastPage > 1 && (
                <div class="pagination-container">
                    <nav class="pagination-body" aria-label="Pagination">
                        <a
                            href={url["prev"]}
                            aria-disabled={prevDisabled}
                            class={`pagination-button`}
                            id="prev-button"
                            aria-label="Previous page"
                            title="Previous page"
                            tabindex={prevDisabled ? "-1" : "0"}
                        >
                            {" "}
                            &lt;
                        </a>
                        <div id="pagination-numbers">
                            {paginationList.map((num) => (
                                <a
                                    href={`/${firstPath}${num == 1 ? "" : "/" + num}`}
                                    class={`pagination-number ${currentPage == num ? "disabled active" : ""}`}
                                >
                                    {num}
                                </a>
                            ))}
                        </div>

                        <a
                            href={url["next"]}
                            class={`pagination-button`}
                            aria-disable={nextDisabled}
                            id="next-button"
                            aria-label="Next page"
                            title="Next page"
                            tabindex={nextDisabled ? "-1" : "0"}
                        >
                            {" "}
                            &gt;
                        </a>
                    </nav>
                </div>
            )
        }
    </section>
</Layout>
